@model IEnumerable
@{ Layout = null; }
<!DOCTYPE html>
<html>
<head>
    <title>Responsive Layout - ASP.NET MVC Panel Extension</title>
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/Panel/ResponsiveLayout.css")" />    
    @Html.DevExpress().GetStyleSheets(
        new StyleSheet { ExtensionType = ExtensionType.Panel },
        new StyleSheet { ExtensionType = ExtensionType.ComboBox },
        new StyleSheet { ExtensionType = ExtensionType.GridView }        
    )
    <script src="@Url.Content("~/Scripts/jquery-1.11.1.min.js")" type="text/javascript"></script>
    @Html.DevExpress().GetScripts(
        new Script { ExtensionType = ExtensionType.Panel },
        new Script { ExtensionType = ExtensionType.ComboBox },
        new Script { ExtensionType = ExtensionType.GridView }        
    )
    <script type="text/javascript">
        function OnGetRowValues(value) {
            $.ajax({
                type: "GET",
                url: '@Url.Action("ResponsiveLayoutEditorsPartial", "Panel")',
                data: { 'customerID': value },
                success: function (data) {
                    $('#detailPanel').html(data)
                }
            });
        }
        function UpdateEditorsValues(){
            sampleGrid.GetRowValues(sampleGrid.GetFocusedRowIndex(), 'CustomerID', OnGetRowValues);
        }
        var updateEditorsOnEndCallback = false;
        function OnListBoxValueChanged(){
            if (!sampleGrid.InCallback())
                sampleGrid.PerformCallback();
            updateEditorsOnEndCallback = true;
        }
        function OnGridViewBeginCallback(s, e) {
            e.customArgs["employeeID"] = sampleListBox.GetValue();
        }
        function OnGridViewEndCallback(s, e) {
            if(updateEditorsOnEndCallback) {
                updateEditorsOnEndCallback = false;
                UpdateEditorsValues();
            }
        }
        function UpdateGridHeight(){
            sampleGrid.SetHeight(0);
            var containerHeight = _aspxGetDocumentHeight();
            if(document.body.scrollHeight > containerHeight)
                containerHeight = document.body.scrollHeight;
            sampleGrid.SetHeight(containerHeight - topPanel.GetHeight() - employeeSelectorPanel.GetHeight() - detailPanel.GetHeight());
        }
    </script>
</head>
<body>
    @Html.DevExpress().Panel(settings => {
        settings.Name = "topPanel";
        settings.FixedPosition = PanelFixedPosition.WindowTop;
        settings.Collapsible = true;
        settings.SettingsAdaptivity.CollapseAtWindowInnerWidth = 580;
        settings.SetContent(() => {
            ViewContext.Writer.Write("<div class='title'>Orders</div>");
            Html.RenderPartial("ResponsiveLayoutMainMenuPartial");                     
        });
        settings.SetExpandBarTemplateContent(c => {
            ViewContext.Writer.Write("<div class='title'>Orders</div>");
        });
        settings.SetExpandedPanelTemplateContent(c => {
            Html.RenderPartial("ResponsiveLayoutExpandedMenuPartial");
        });
    }).GetHtml()
    @Html.DevExpress().Panel(settings => {
        settings.Name = "LeftPanel";
        settings.FixedPosition = PanelFixedPosition.WindowLeft;
        settings.Collapsible = true;
        settings.SettingsAdaptivity.CollapseAtWindowInnerWidth = 768;
        settings.SetContent(() => {
            Html.RenderPartial("ResponsiveLayoutNavBarPartial");
        });
    }).GetHtml()
    @Html.DevExpress().Panel(settings => {
        settings.Name = "employeeSelectorPanel";
        settings.EnableClientSideAPI = true;
        settings.Styles.Panel.Paddings.Padding = Unit.Pixel(8);
        settings.SetContent(() => {
            Html.DevExpress().ComboBox(comboBoxSettings => {
                comboBoxSettings.Name = "sampleListBox";
                comboBoxSettings.Properties.Caption = "Employee";
                comboBoxSettings.Properties.TextField = "Name";
                comboBoxSettings.Properties.ValueField = "ID";
                comboBoxSettings.Properties.ValueType = typeof(int);
                comboBoxSettings.SelectedIndex = 0;
                comboBoxSettings.Height = Unit.Percentage(100);
                comboBoxSettings.Properties.ClientSideEvents.ValueChanged = "OnListBoxValueChanged";
            }).BindList(Model).Render();
        });
    }).GetHtml()
    @Html.Action("ResponsiveLayoutGridPartial")                
    @Html.DevExpress().Panel(settings => {
        settings.Name = "detailPanel";
        settings.Width = Unit.Percentage(100);
        settings.Styles.Panel.CssClass = "detailPanel";
        settings.Collapsible = true;
        settings.SettingsCollapsing.ExpandEffect= PanelExpandEffect.PopupToTop;
        settings.SettingsCollapsing.AnimationType = AnimationType.Slide;
        settings.SettingsAdaptivity.CollapseAtWindowInnerHeight = 680;
        settings.SettingsAdaptivity.HideAtWindowInnerHeight = 380;
        settings.Styles.ExpandBar.Width = Unit.Percentage(100);
        settings.Styles.ExpandBar.CssClass = "bar";
        settings.Styles.Panel.BorderTop.BorderWidth = Unit.Pixel(1);
        settings.SetContent(() => {
            Html.RenderAction("ResponsiveLayoutEditorsPartial");            
        });
    }).GetHtml()
    <script type="text/javascript">
    // <![CDATA[
        ASPxClientControl.GetControlCollection().ControlsInitialized.AddHandler(function(s,e){
            UpdateGridHeight();
        });
        ASPxClientControl.GetControlCollection().BrowserWindowResized.AddHandler(function(s,e){
            UpdateGridHeight();
        });
    // ]]> 
    </script>
</body>
</html>
